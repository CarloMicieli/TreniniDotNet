// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreniniDotNet.Infrastructure.Persistence;

namespace TreniniDotNet.Web.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("TreniniDotNet.Infrastructure.Persistence.Catalog.Brands.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.HasKey("BrandId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("Idx_Brands_Name");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("Idx_Brands_Slug");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("TreniniDotNet.Infrastructure.Persistence.Catalog.Railways.Railway", b =>
                {
                    b.Property<Guid>("RailwayId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.Property<DateTime?>("OperatingSince")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OperatingUntil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.HasKey("RailwayId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("Idx_Railways_Name");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("Idx_Railways_Slug");

                    b.ToTable("Railways");
                });

            modelBuilder.Entity("TreniniDotNet.Infrastructure.Persistence.Catalog.Scales.Scale", b =>
                {
                    b.Property<Guid>("ScaleId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gauge")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10)
                        .IsUnicode(true);

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<float>("Ratio")
                        .HasColumnType("REAL");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("TrackGauge")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(15);

                    b.HasKey("ScaleId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("Idx_Scales_Name");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("Idx_Scales_Slug");

                    b.ToTable("Scales");
                });
#pragma warning restore 612, 618
        }
    }
}
